---

# geerlingguy.pip
pip_install_packages:
  - name: docker
  - name: docker-compose

# geerlingguy.docker
docker_install_compose: true
docker_compose_version: "1.26.0"
docker_compose_arch: "{{ ansible_architecture }}"
docker_compose_path: /usr/local/bin/docker-compose

# caddy_ansible.caddy_ansible
caddy_config: |
  {{ immich_domain }} {
    reverse_proxy localhost:2283

    header {
      Strict-Transport-Security max-age=15552000
    }

    tls logs@moras.dev {
      dns cloudflare {{ cloudflare_dns_token }}
    }
  }
caddy_update: true
caddy_packages: [
  "github.com/caddy-dns/cloudflare"
]
caddy_setcap: true
caddy_systemd_capabilities_enabled: true
caddy_systemd_capabilities: "CAP_NET_BIND_SERVICE"

# docker-compose file
docker_compose:
  version: "3.8"

  services:
    immich-server:
      container_name: immich_server
      image: ghcr.io/immich-app/immich-server:release
      entrypoint: ["/bin/sh", "./start-server.sh"]
      volumes:
        - "{{ immich_storage_location }}/photos:/usr/src/app/upload"
      environment:
        - DB_HOSTNAME=immich_postgres
        - DB_USERNAME=immich
        - "DB_PASSWORD={{ immich_database_password }}"
        - DB_DATABASE_NAME=immich
        - REDIS_HOSTNAME=immich_redis
        - IMMICH_WEB_URL=http://immich-web:3000
        - IMMICH_SERVER_URL=http://immich-server:3001
        - IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003
        - "TYPESENSE_API_KEY={{ typesense_api_key }}"
      depends_on:
        - redis
        - database
        - typesense
      restart: always

    immich-microservices:
      container_name: immich_microservices
      image: ghcr.io/immich-app/immich-server:release
      entrypoint: ["/bin/sh", "./start-microservices.sh"]
      volumes:
        - "{{ immich_storage_location }}/photos:/usr/src/app/upload"
      environment:
        - DB_HOSTNAME=immich_postgres
        - DB_USERNAME=immich
        - "DB_PASSWORD={{ immich_database_password }}"
        - DB_DATABASE_NAME=immich
        - REDIS_HOSTNAME=immich_redis
        - IMMICH_WEB_URL=http://immich-web:3000
        - IMMICH_SERVER_URL=http://immich-server:3001
        - IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003
        - "TYPESENSE_API_KEY={{ typesense_api_key }}"
      depends_on:
        - redis
        - database
        - typesense
      restart: always

    immich-machine-learning:
      container_name: immich_machine_learning
      image: ghcr.io/immich-app/immich-machine-learning:release
      volumes:
        - "{{ immich_storage_location }}/photos:/usr/src/app/upload"
        - model-cache:/cache
      environment:
        - DB_HOSTNAME=immich_postgres
        - DB_USERNAME=immich
        - "DB_PASSWORD={{ immich_database_password }}"
        - DB_DATABASE_NAME=immich
        - REDIS_HOSTNAME=immich_redis
        - IMMICH_WEB_URL=http://immich-web:3000
        - IMMICH_SERVER_URL=http://immich-server:3001
        - IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003
        - "TYPESENSE_API_KEY={{ typesense_api_key }}"
      restart: always

    immich-web:
      container_name: immich_web
      image: ghcr.io/immich-app/immich-web:release
      entrypoint: ["/bin/sh", "./entrypoint.sh"]
      environment:
        - DB_HOSTNAME=immich_postgres
        - DB_USERNAME=immich
        - "DB_PASSWORD={{ immich_database_password }}"
        - DB_DATABASE_NAME=immich
        - REDIS_HOSTNAME=immich_redis
        - IMMICH_WEB_URL=http://immich-web:3000
        - IMMICH_SERVER_URL=http://immich-server:3001
        - IMMICH_MACHINE_LEARNING_URL=http://immich-machine-learning:3003
        - "TYPESENSE_API_KEY={{ typesense_api_key }}"
      restart: always

    typesense:
      container_name: immich_typesense
      image: typesense/typesense:0.24.0
      environment:
        - "TYPESENSE_API_KEY={{ typesense_api_key }}"
        - TYPESENSE_DATA_DIR=/data
      logging:
        driver: none
      volumes:
        - tsdata:/data
      restart: always

    redis:
      container_name: immich_redis
      image: redis:6.2
      restart: always

    database:
      container_name: immich_postgres
      image: postgres:14
      environment:
        - "POSTGRES_PASSWORD={{ immich_database_password }}"
        - POSTGRES_USER=immich
        - POSTGRES_DB=immich
        - PG_DATA=/var/lib/postgresql/data
      volumes:
        - "{{ immich_storage_location }}/database:/var/lib/postgresql/data"
      restart: always

    immich-proxy:
      container_name: immich_proxy
      image: ghcr.io/immich-app/immich-proxy:release
      environment:
        # Make sure these values get passed through from the env file
        - IMMICH_WEB_URL=http://immich-web:3000
        - IMMICH_SERVER_URL=http://immich-server:3001
      ports:
        - 2283:8080
      logging:
        driver: none
      depends_on:
        - immich-server
      restart: always

  volumes:
    model-cache:
    tsdata:
